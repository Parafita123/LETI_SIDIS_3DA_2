@startuml
title Pesquisar Pacientes do Próprio Médico (a partir do Token)

actor "Médico" as User
participant ":Frontend" as Frontend
participant ":API Gateway" as Gateway
participant ":IdentityService" as IdentityService
participant PatientController as Controller
participant PatientServiceImpl as Service
participant PatientRepository as Repo
database ":H2Database" as DB

autonumber

group Fase 1: Autenticação do Médico

    User -> Frontend : Inicia login com credenciais
    Frontend -> Gateway : 1. POST /auth/login
    Gateway -> IdentityService : 1.1. Validar credenciais
    IdentityService --> Gateway : 1.2. Retorna Token JWT (contendo **physician_id**)
    Gateway --> Frontend : 1.3. Retorna Token JWT
    Frontend -> Frontend : 1.4. Armazena o token de forma segura
    Frontend --> User : Login bem-sucedido

end

group Fase 2: Pesquisa de Pacientes (Ação Autorizada e Filtrada)

    User -> Frontend : Pesquisa paciente pelo nome (ex: "Silva")

    Frontend -> Gateway : 2. GET /patients?name=Silva (**Authorization: Bearer <JWT>**)

    Gateway -> Gateway : 3. Valida a assinatura e expiração do JWT

    ' Passo crucial: O Gateway extrai a identidade do token.
    Gateway -> Gateway : 4. Extrai **physician_id** do payload do token

    ' O Gateway enriquece a requisição antes de a encaminhar.
    Gateway -> Controller : 5. GET /?name=Silva (Header: **X-Physician-ID: {id_do_medico}**)

    Controller -> Service : 6. findMyPatientsByName("Silva", {id_do_medico})
    Service -> Repo : 7. findByNameAndPhysicianId("Silva", {id_do_medico})

    ' A consulta SQL agora filtra pelo ID do médico, garantindo a segurança.
    Repo -> DB : 7.1. SELECT p.* FROM patients p JOIN appointments a ON p.id = a.patient_id WHERE p.name LIKE '%Silva%' AND a.physician_id = {id_do_medico}

    DB --> Repo : 7.2. Retorna lista de dados de pacientes filtrada
    Repo --> Service : 7.3. Retorna List<Patient>
    Service -> Service : 8. Mapeia List<Patient> para List<PatientDto>
    Service --> Controller : 9. Retorna List<PatientDto>

    Controller --> Gateway : 10. HTTP 200 OK + JSON com List<PatientDto>

    Gateway --> Frontend : 11. HTTP 200 OK + JSON

    Frontend --> User : 12. Exibe a lista de pacientes encontrados (apenas os do médico)

end
@enduml