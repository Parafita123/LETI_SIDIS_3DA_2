@startuml C4_Component_Physician_Service
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

skinparam backgroundcolor white
title Physician Service\n[Container - C4 Level 3: Component Diagram]

' ===========================
' CONTAINER
' ===========================
Container_Boundary(physician_container, "Physician Service") {

    ' ==== ENTRY LAYER ====
    Component(security_filter, "Security Filter", "Spring Security / JwtAuthenticationFilter", "Intercepts and validates authentication for all incoming requests")

    Component(physician_controller, "Physician Controller", "Spring REST Controller", "Handles HTTP requests and maps them to business operations")

    Component(exception_handler, "Exception Handler", "Spring @ControllerAdvice", "Handles and standardizes application exceptions")

    ' ==== BUSINESS LAYER ====
    Component(physician_service, "Physician Service", "Spring Service", "Implements business logic for physician management")

    Component(dto, "Physician DTOs", "Data Transfer Objects", "Encapsulates data exchanged between Controller and Service layers")

    Component(validation, "Validation", "Jakarta Validation", "Validates physician request data before processing")

    ' ==== DATA LAYER ====
    Component(physician_repository, "Physician Repository", "Spring Data JPA", "Handles persistence and data access operations")

}

' ==== EXTERNAL COMPONENT ====
ContainerDb(database, "Physician Database", "PostgreSQL","Stores physician records and related data")

' ==== RELATIONSHIPS ====
' Entry flow
Rel(security_filter, physician_controller, "Filters & authenticates requests")
Rel(physician_controller, validation, "Validates input data")
Rel(physician_controller, dto, "Uses")
Rel(physician_controller, physician_service, "Invokes business logic")
Rel(physician_controller, exception_handler, "Delegates error handling")

' Business flow
Rel(physician_service, dto, "Uses")
Rel(physician_service, physician_repository, "Reads/Writes physician data")

' Data flow
Rel(physician_repository, database, "Reads/Writes", "JPA/SQL")

@enduml
